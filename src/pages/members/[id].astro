---
// © 2024 Functional Software, Inc. dba Sentry
// © 2024 Vlad-Stefan Harbuz <vlad@vlad.website>
// SPDX-License-Identifier: Apache-2.0

import Blob from "../../components/Blob.astro";
import Layout from "../../layouts/Layout.astro";
import TextButton from "../../components/TextButton.astro";

import { getMembers, getDollarsPerDev, fmtCurrency } from '../../members/common.ts';
import type { Member } from '../../members/common.ts';
import type { SanityDocument } from "@sanity/client";
import { sanityClient } from "sanity:client";
import { urlForImage } from '../../sanityUtil.ts';
import type { JobSet } from "../../jobs/index.ts";
import jobSetRaw from "../../cache/jobSet.json";

import dayjs from 'dayjs';
import utc from 'dayjs/plugin/utc';
dayjs.extend(utc);

interface Props {
  member: Member;
}

const { member } = Astro.props;

export async function getStaticPaths() {
  const members = getMembers();
  return members.map((member) => {
    return { params: { id: member.id }, props: { member } };
  });
}

/* Get company profile blog post, if it exists */
const ARTICLE_QUERY = `*[_type == "article" && slug.current == $slug][0]{
  _id,
  title,
  slug,
  publishDateTime,
  canonicalUrl,
  opengraphImage,
  opengraphImageAltText,
  opengraphDescription,
  author->{name, slug, avatar}
}`;
let memberArticle = undefined;
let isMemberArticlePublished = false;
if (member.blogProfileSlug) {
  memberArticle = await sanityClient.fetch<SanityDocument>(ARTICLE_QUERY, { slug: member.blogProfileSlug });
  isMemberArticlePublished = dayjs(memberArticle.publishDateTime).isBefore(dayjs().utc());
}

/* Get jobs, if they exist */
const jobSet = jobSetRaw as JobSet;
const memberJobs = jobSet.companies[Astro.params.id];
---

<Layout title={member.name}>
  <div class="edge-blobs">
    <Blob kind="grad-dots-04" top="12%" right="-2rem"></Blob>
    <Blob kind="grad-dots-05" top="45%" left="-2rem"></Blob>
  </div>
  <div class="container container--narrow">
    <Blob kind="solid-fill-04" top="2%" right="-24rem"></Blob>
    <Blob kind="solid-fill-03" top="30%" left="-30rem"></Blob>
    <Blob kind="grad-dots-03" top="65%" right="-20rem"></Blob>
    <Blob kind="solid-fill-02" top="60%" right="-24rem"></Blob>

    <main id="main-content">
      <section>
        <div class="company-intro">
          <img src=`/images/members/${Astro.params.id}/logo.webp` alt=`The ${member.name} logo`>
          <h1>
            <div>{member.name}</div>
            <div class="label">{member.role}</div>
          </h1>
        </div>

        <!--
          If the description is HTML, render it as HTML, otherwise render it as text inside a <p> tag.
          The implementation is a bit of a hack: we just check if the description contains the string `</`.
          This works well enough for our purposes.
        -->
        {member.description.includes(`</`) && (
          <p><Fragment set:html={member.description} /></p>
        ) || (
          <p>{member.description}</p>
        )}

        <a href={member.url} target="_blank">Learn more →</a>

        <p>
          <em>Joined on {dayjs(member.joinDate).format('DD MMM YYYY')}.</em>
        </p>

        {member.annualReports.map(report => <section class="annual-report">
          <div>
            <h2>
              {report.year} Report, Submitted
              <abbr title="Members submit once per year, but can submit at any point during the year, to accommodate eg differing international fiscal years.">
                {dayjs(report.reportDate).format('DD MMM YYYY')}
              </abbr>
            </h2>
          </div>

          <table class="table--bordered table--lr">
            <tbody>
              <tr>
                <td
                  >Average number of <abbr
                    title="Average number of employed full-time equivalent developers"
                  >devs</abbr
                ></td>
                <td>{report.averageNumberOfDevs}</td>
              </tr>
              <tr>
                <td>Payments</td>
                <td>{fmtCurrency(report.usdAmountPaid)}</td>
              </tr>
              <tr>
                <td>Dollars per dev</td>
                <td>{fmtCurrency(getDollarsPerDev(report))} / dev</td>
              </tr>
            </tbody>
          </table>
          <div class="text-center">
            <TextButton
              href={report.url}
              target="_blank"
            >Read report</TextButton>
          </div>
        </section>)}

        {memberArticle && isMemberArticlePublished && (
        <section>
          <div class="article-listing">
            <blockquote>
              <a href=`/blog/${memberArticle.slug.current}`>
                <h2>{memberArticle.title}</h2>
              </a>
            </blockquote>
            <div class="meta">
              <div
                class="avatar"
                style={`background-image: url(${urlForImage(memberArticle.author.avatar)}`}
              ></div>
              <div>
                <em>{memberArticle.author.name}</em>
                <time>{dayjs(memberArticle.publishDateTime).format('DD MMM YYYY')}</time>
              </div>
            </div>
            <hr>
          </div>
        </section>
        )}

        {memberJobs && memberJobs.length > 0 && (
          <section>
            <h2>Jobs at {member.name}</h2>
            <div class="job-set">
              {memberJobs.map((job) =>
                <a
                  class="job-link"
                  href={job.url}
                  target="_blank"
                >{job.title}</a>
              )}
            </div>
          </section>
        )}

        <small>
          This information is provided directly by {member.name}. Open
          Source Pledge does not carry out any in-depth validation of this data.
        </small>
      </section>
    </main>
  </div>
</Layout>

<style>
  .company-intro {
    display: flex;
    align-items: center;
    @media (max-width: 800px) {
      display: block;
    }
    img {
      max-width: 7rem;
      margin-right: 2rem;
      border-radius: 0.5rem;
      @media (max-width: 800px) {
        display: block;
        margin-left: auto;
        margin-right: auto;
        margin-bottom: 1rem;
      }
    }
    h1 {
      margin: 0;
      font-size: 2rem;
      line-height: 1;
      .label {
        margin-top: 1rem;
      }
      @media (max-width: 800px) {
        text-align: center;
      }
    }
  }
  .annual-report {
    padding: 1rem;
    border-radius: 0.5rem;
    background: var(--color-light-bg);
    h2 {
      font-size: 1rem;
    }
    table {
      margin-top: 2rem;
    }
    a {
      margin-bottom: 0;
    }
  }
</style>
